#!/bin/bash

# Script to prepare simplecov coverage reports.

# The rspec and cucumber reports are all written to repo_root/coverage
# Simplecov handles locking and merging for parallel tests.  The GKE tests
# can't mount that dir, so they produce a separate report which is merged into
# repo_root/coverage by this script.

set -eux

DIR="coverage"
REPORT="$DIR/.resultset.json"
GKE_DIR="ci/test_suites/authenticators_k8s/output"
GKE_REPORT="$GKE_DIR/simplecov-resultset-authnk8s-gke.json"

ensure_report_exists() {
  local dir=$1
  local report=$2

  if [[ ! -e "$report" ]]; then
      echo "ERROR: SimpleCov report '$report' not found"
      echo "Directory contents are:"
      ls -laR "$dir"
      exit 1
  fi

  if ! grep -q SimpleCov "$report"; then
      echo "ERROR: SimpleCov report '$report' does not contain SimpleCov data:"
      echo "--- File Content ---"
      cat "$report"
      echo "--- End File Content ---"
      exit 1
  fi
}

ensure_report_exists "$DIR" "$REPORT"
ensure_report_exists "$GKE_DIR" "$GKE_REPORT"

echo "SimpleCov Reports Found: $REPORT, $GKE_REPORT"

# Preserve a pre-merge version of the results from the non gke test branches.
cp "$REPORT" "$DIR/.resultset-non-gke.json"

# Merge GKE report with the already combined cucumber and rspec results.
# -s loads input files into an array
# * merges objects
jq -s '.[0] * .[1]' "$REPORT" "$GKE_REPORT" > simplecov_combined

# This mv is safe as it happens after all the parallel tests are complete.
mv simplecov_combined "$REPORT"

# Simplecov excludes files not within the current repo, it also needs to be
# able to read all the files referenced within the report. As the reports are
# generated in containers, the absolute paths contained in the report are not
# valid outside that container. This sed fixes the paths So they are correct
# relative to the Jenkins workspace.
sed -i -E "s+/(opt|src)/conjur-server+${WORKSPACE}+g" "$REPORT"

# Now need to regenerate the html report, as it was generated before the GKE
# results were merged in.
pushd ci/coverage-report-generator
  ./run.sh
popd

echo "Coverage reports prepared."
